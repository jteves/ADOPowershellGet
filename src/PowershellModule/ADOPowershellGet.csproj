<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Description>PowershellGet Wrapper to install Powershell Modules from Azure DevOps feeds</Description>

    <!-- The generated package is not a traditional "dependency" package and will fail nuget validations -->
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IsTool>true</IsTool>
    <BuildOutputTargetFolder>.</BuildOutputTargetFolder>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Services.NuGet.CredentialProvider" Version="0.37.0" GeneratePathProperty="true" />
    <PackageReference Include="PowerShellStandard.Library" Version="5.1.0" />

    <Content Include="$(PkgMicrosoft_VisualStudio_Services_NuGet_CredentialProvider)\tools\CredentialProvider.VSS.exe">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>Assets\CredentialProvider.VSS.exe</Link>
      <PackagePath>Assets\CredentialProvider.VSS.exe</PackagePath>
    </Content>

    <Content Include="Functions\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>Functions</PackagePath>
    </Content>
  </ItemGroup>

    <!-- Collect all dependencies and include them in the package itself, next to the Task assembly. -->
  <Target Name="CollectRuntimeOutputs" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <Content Include="&#xD;&#xA;            $(OutputPath)**\*.dll;&#xD;&#xA;            $(OutputPath)**\*.exe;&#xD;&#xA;            $(OutputPath)**\*.dll.config;&#xD;&#xA;            $(OutputPath)**\*.json;&#xD;&#xA;            ">
        <Pack>true</Pack>
        <PackagePath>.</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="ValidateScripts" BeforeTargets="Build">
    <Exec Command="pwsh.exe -File Build\Validate-Scripts.ps1" />
  </Target>

  <Target Name="UpdateModuleManifest" AfterTargets="Build" DependsOnTargets="GetBuildVersion">
    <ItemGroup>
      <None Include="$(OutputPath)\$(AssemblyName).psd1">
        <Pack>true</Pack>
        <PackagePath>$(AssemblyName).psd1</PackagePath>
      </None>
    </ItemGroup>

    <Exec Command="PowerShell.exe -Command &quot;(Get-Content $(AssemblyName).psd1) -replace '__VERSION__','$(BuildVersionSimple)' | Out-File $(OutputPath)\$(AssemblyName).psd1&quot;" />
  </Target>

  <Target Name="PreventNuspecGeneration" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <OutputFileNamesWithoutVersion>true</OutputFileNamesWithoutVersion>
      <ContinuePackingAfterGeneratingNuspec>false</ContinuePackingAfterGeneratingNuspec>
    </PropertyGroup>
  </Target>

  <Target Name="BuildNugetPackage" AfterTargets="GenerateNuspec">
    <Exec Command="pwsh.exe -File Build\Set-PackageDependencies.ps1 -NusPecPath $(IntermediateOutputPath)..\$(AssemblyName).nuspec" />
    <Exec Command="nuget.exe pack $(IntermediateOutputPath)..\$(AssemblyName).nuspec -NoPackageAnalysis -OutputDirectory bin" />
  </Target>

</Project>
